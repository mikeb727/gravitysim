TODO:
  - Phase I
    - modernize code to C++11 or better
    - remove standard namespaces
    - decouple all sim elements from SDL
    - decouple environment from SDL
      - method to attach window to environment
      - background getter/setter
      - event handling
    - fix new ball velocity bug
      - create variables in environment to store velocity?
      - create "invisible" control for velocity components?
      - create new display type for velocity control? (will need to manipulate multiple parameters)
    - encode more information in event handler return value? )currently whether to exit app)
    - properly destroy environment bounding box?
    - environment controls to map? (no need for unclear indices, will become part of main app as part of decoupling)
    - tolerance for vector equality?
    - duplicate scalar multiple methods for vectors?
      - allows for commutative multiplication
    - vector ostream using const value instead of reference?
    - switch to (x,y) form internally for vectors
      - for faster operations; need components more than mag/dir
    - remove commented-out code
    - remove unused "ball" object code
    - "symmetric" operations for bounding boxes?
      - operations not initiated by object, but instead by helper function; example: distanceBetween(ball1, ball2) vs. ball1.distanceFrom(ball2)
    - enumerate vector creation modes (components, mag/dir)
    - decouple control from rectangle
    - new object for "graphical" vs. "logical" control?
      - want to be able to store simulation parameters (e.g. new ball velocities, even gravity) without any info on location in window
    - decouple image colors from SDL
    - remove "list" code (no need to reimplement something already available in C++)
    - fix "reverse or move" bug in object (done)
    - allow for inelastic collisions with environment walls?
    - decouple SDL from window? (should be API-agnostic)
      - window already initializes SDL
        - move to imageTools to allow for multiple windows
        - idea of window should not be synonymous with library initialization
      - initialize SDL in imageTools
      - reset render color after drawing in window
  - Phase II
    - port to OpenGL
  - Phase III
    - Rust?
